{
  "sksl": {
    "entrypoint": "liquid_glass_lens_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uResolution;\nuniform vec2 uMouse;\nuniform float uEffectSize;\nuniform float uBlurIntensity;\nuniform float uDispersionStrength;\nuniform shader uTexture;\nuniform half2 uTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvoid FLT_main()\n{\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv = fragCoord / uResolution;\n    vec2 center = uMouse / uResolution;\n    vec2 m2 = uv - center;\n    float effectRadius = uEffectSize * 0.5;\n    float sizeMultiplier = 1.0 / (effectRadius * effectRadius);\n    float roundedBox = pow(abs((m2.x * uResolution.x) / uResolution.y), 4.0) + pow(abs(m2.y), 4.0);\n    float baseIntensity = 100.0 * sizeMultiplier;\n    float rb1 = clamp((1.0 - (roundedBox * baseIntensity)) * 8.0, 0.0, 1.0);\n    float rb2 = clamp((0.949999988079071044921875 - ((roundedBox * baseIntensity) * 0.949999988079071044921875)) * 16.0, 0.0, 1.0) - clamp(pow(0.89999997615814208984375 - ((roundedBox * baseIntensity) * 0.949999988079071044921875), 1.0) * 16.0, 0.0, 1.0);\n    float rb3 = clamp((1.5 - ((roundedBox * baseIntensity) * 1.10000002384185791015625)) * 2.0, 0.0, 1.0) - clamp(pow(1.0 - ((roundedBox * baseIntensity) * 1.10000002384185791015625), 1.0) * 2.0, 0.0, 1.0);\n    fragColor = vec4(0.0);\n    if ((rb1 + rb2) > 0.0)\n    {\n        float distortionStrength = 50.0 * sizeMultiplier;\n        vec2 lens = ((uv - vec2(0.5)) * (1.0 - (roundedBox * distortionStrength))) + vec2(0.5);\n        vec2 dir = normalize(m2);\n        float dispersionScale = uDispersionStrength * 0.0500000007450580596923828125;\n        float dispersionMask = smoothstep(0.300000011920928955078125, 0.699999988079071044921875, roundedBox * baseIntensity);\n        vec2 redOffset = ((dir * dispersionScale) * 2.0) * dispersionMask;\n        vec2 greenOffset = ((dir * dispersionScale) * 1.0) * dispersionMask;\n        vec2 blueOffset = ((dir * dispersionScale) * (-1.5)) * dispersionMask;\n        vec4 colorResult = vec4(0.0);\n        if (uBlurIntensity > 0.0)\n        {\n            float blurRadius = uBlurIntensity / max(uResolution.x, uResolution.y);\n            float total = 0.0;\n            vec3 colorSum = vec3(0.0);\n            for (float x = -2.0; x <= 2.0; x += 1.0)\n            {\n                for (float y = -2.0; y <= 2.0; y += 1.0)\n                {\n                    vec2 offset = vec2(x, y) * blurRadius;\n                    colorSum.x += uTexture.eval(uTexture_size * ( (lens + offset) + redOffset)).x;\n                    colorSum.y += uTexture.eval(uTexture_size * ( (lens + offset) + greenOffset)).y;\n                    colorSum.z += uTexture.eval(uTexture_size * ( (lens + offset) + blueOffset)).z;\n                    total += 1.0;\n                }\n            }\n            colorResult = vec4(colorSum / vec3(total), 1.0);\n        }\n        else\n        {\n            colorResult.x = uTexture.eval(uTexture_size * ( lens + redOffset)).x;\n            colorResult.y = uTexture.eval(uTexture_size * ( lens + greenOffset)).y;\n            colorResult.z = uTexture.eval(uTexture_size * ( lens + blueOffset)).z;\n            colorResult.w = 1.0;\n        }\n        float gradient = clamp((clamp(m2.y, 0.0, 0.20000000298023223876953125) + 0.100000001490116119384765625) / 2.0, 0.0, 1.0) + clamp(((clamp(-m2.y, -1000.0, 0.20000000298023223876953125) * rb3) + 0.100000001490116119384765625) / 2.0, 0.0, 1.0);\n        fragColor = mix(uTexture.eval(uTexture_size * ( uv)), colorResult, vec4(rb1));\n        fragColor = clamp((fragColor + vec4(rb2 * 0.300000011920928955078125)) + vec4(gradient * 0.20000000298023223876953125), vec4(0.0), vec4(1.0));\n    }\n    else\n    {\n        fragColor = uTexture.eval(uTexture_size * ( uv));\n    }\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uResolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uMouse",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uEffectSize",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "uBlurIntensity",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "uDispersionStrength",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 5,
        "name": "uTexture",
        "rows": 1,
        "type": 12
      }
    ]
  }
}